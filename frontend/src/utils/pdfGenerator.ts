import jsPDF from 'jspdf';

interface PrescriptionData {
  id: string;
  patient_name: string;
  doctor_name: string;
  age: number;
  history: string[];
  diagnosis: string;
  symptoms: string;
  prescription: string;
  timestamp: string;
}

export const generatePrescriptionPDF = (prescription: PrescriptionData) => {
  const doc = new jsPDF();
  
  // Draw border
  doc.setDrawColor(60, 60, 60);
  doc.setLineWidth(0.5);
  doc.rect(10, 10, 190, 277, 'S');
  
  // Header
  doc.setFontSize(22);
  doc.setFont('helvetica', 'bold');
  doc.text('Medical Prescription', 105, 24, { align: 'center' });
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text(`Date: ${new Date(prescription.timestamp).toLocaleDateString()}`, 160, 32);
  
  // Doctor and Patient Info
  doc.setFontSize(13);
  doc.setFont('helvetica', 'bold');
  doc.text('Doctor:', 20, 42);
  doc.setFont('helvetica', 'normal');
  doc.text(prescription.doctor_name, 40, 42);
  
  doc.setFont('helvetica', 'bold');
  doc.text('Patient:', 20, 50);
  doc.setFont('helvetica', 'normal');
  doc.text(prescription.patient_name, 42, 50);
  
  doc.setFont('helvetica', 'bold');
  doc.text('Age:', 120, 50);
  doc.setFont('helvetica', 'normal');
  doc.text(String(prescription.age), 135, 50);
  
  doc.setFont('helvetica', 'bold');
  doc.text('Diagnosis:', 20, 58);
  doc.setFont('helvetica', 'normal');
  doc.text(prescription.diagnosis, 45, 58);
  
  doc.setFont('helvetica', 'bold');
  doc.text('Medical History:', 20, 66);
  doc.setFont('helvetica', 'normal');
  const historyText = prescription.history && prescription.history.length > 0 ? prescription.history.join(', ') : 'None';
  doc.text(historyText, 55, 66);
  
  // Section: Symptoms
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(14);
  doc.text('Symptoms', 20, 80);
  doc.setFont('helvetica', 'normal');
  doc.setFontSize(12);
  const symptomsLines = doc.splitTextToSize(prescription.symptoms, 170);
  doc.text(symptomsLines, 20, 88);
  
  // Section: Prescription
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(14);
  doc.text('Prescription', 20, 110);
  doc.setFont('helvetica', 'normal');
  doc.setFontSize(12);
  const prescriptionLines = doc.splitTextToSize(prescription.prescription, 170);
  doc.text(prescriptionLines, 20, 118);
  
  // Footer
  doc.setFontSize(10);
  doc.setTextColor(100);
  doc.text('This prescription is generated by the AI-powered prescription system.', 20, 265);
  doc.text('Please consult with your healthcare provider for any questions.', 20, 270);
  
  // Save the PDF
  doc.save(`prescription-${prescription.id}.pdf`);
};

export const downloadPrescriptionPDF = async (prescriptionId: string) => {
  try {
    const response = await fetch(`/api/download-prescription/${prescriptionId}`);
    if (response.ok) {
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `prescription-${prescriptionId}.pdf`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    } else {
      console.error('Failed to download PDF');
    }
  } catch (error) {
    console.error('Error downloading PDF:', error);
  }
}; 